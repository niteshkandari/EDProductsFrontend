{"version":3,"sources":["Facade/Api.enum.ts","Components/DropDowm/DropDowm.tsx","Components/ProductCard/ProductCard.tsx","Facade/facade.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","SubMenu","Menu","DropDowm","productDetails","product","state","city","onClick","e","console","log","style","width","defaultSelectedKeys","mode","title","map","productName","key","Item","ProductCard","props","data","item","borderRadius","height","backgroundColor","position","className","src","image","objectFit","alt","product_name","brand_name","price","address","moment","date","subtract","calendar","discription","operation","FacadeContext","createContext","FacadeProvider","config","method","url","GET_DATA","getApiData","axios","Provider","value","children","App","React","useState","apiData","setApiData","loading","setLoading","productData","setProductData","facade","useContext","useEffect","prevState","then","success","response","length","dropDownData","Array","from","push","catch","err","error","type","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1eaad892.chunk.js","sourcesContent":["export enum API_URL {\n    GET_DATA = \"http://assessment-edvora.herokuapp.com\"\n}","import * as React from \"react\";\nimport { Menu } from \"antd\";\nimport \"./DropDown.less\";\ntype DropDowmProps = {\n  productDetails: any;\n};\nconst { SubMenu } = Menu;\nconst DropDowm: React.FC<any> = ({ productDetails }: DropDowmProps) => {\n  const handleClick = (e: any) => {\n    //onClick we'll get the key of the clicked menu item\n    console.log(e, \"click\");\n  };\n  const { product, state, city } = productDetails;\n\n  return (\n    <Menu\n      onClick={handleClick}\n      style={{ width: 256 }}\n      defaultSelectedKeys={[\"1\"]}\n      mode=\"inline\"\n    >\n      <SubMenu key=\"sub1\" title=\"Products\">\n        {product &&\n          product.map((productName: string, key: number) => {\n            return <Menu.Item key={key}>{productName}</Menu.Item>;\n          })}\n      </SubMenu>\n      <SubMenu key=\"sub2\" title=\"States\">\n        {state &&\n          state.map((state: string, key: number) => {\n            return <Menu.Item key={key}>{state}</Menu.Item>;\n          })}\n      </SubMenu>\n      <SubMenu key=\"sub3\" title=\"City\">\n        {city &&\n          city.map((city: string, key: number) => {\n            return <Menu.Item key={key}>{city}</Menu.Item>;\n          })}\n      </SubMenu>\n    </Menu>\n  );\n};\n\nexport default DropDowm;\n","import * as React from \"react\";\nimport { Card } from \"antd\";\nimport moment from \"moment\";\ntype ProductCardProps = {\n  data: Array<any>;\n};\n\nconst ProductCard: React.FC<any> = (props: ProductCardProps) => {\n  const { data } = props;\n\n  return (\n    <>\n      {data &&\n        data?.map((item, key) => {\n          return (\n            <Card\n              key={key}\n              style={{\n                borderRadius: \"4px\",\n                width: 210,\n                height: \"150px\",\n                backgroundColor: \"#292929\",\n                position:'relative',\n              }}\n            >\n              <div className=\"absolute h-full w-full top-0 left-0 bottom-0 flex flex-col p-2\">\n                <div className=\"flex justify-center space-x-6\">\n                  <div className=\"bg-white rounded-md h-16 w-16 flex flex-shrink-0 justify-center items-center\">\n                    <img\n                      src={item.image}\n                      style={{ objectFit: \"cover\" }}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                      alt=\"img\"\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-white\">{item.product_name}</span>\n                    <span className=\"text-gray-300\">{item.brand_name}</span>\n                    <span className=\"text-white\">$ {item.price}</span>\n                  </div>\n                </div>\n                <div className=\"flex h-full w-full break-words space-x-6\">\n                  <span className=\"text-gray-300\">{item.address.city}</span>\n                  <span className=\"text-gray-300\">\n                    {moment(item.date).subtract(10, \"days\").calendar()}\n                  </span>\n                </div>\n                <span className=\"text-gray-300\">{item.discription}</span>\n              </div>\n            </Card>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ProductCard;\n","import { createContext, useContext } from \"react\";\nimport { API_URL } from \"./Api.enum\";\nimport axios from \"axios\";\n\nlet operation: any = {};\nconst FacadeContext = createContext(operation);\n\nexport const FacadeProvider = (props: any) => {\n  const config: any = {\n    method: \"GET\",\n    url: API_URL.GET_DATA,\n  };\n  const getApiData = () => {\n    return axios(config);\n  };\n  operation = {\n    getApiData,\n  };\n  return (\n    <FacadeContext.Provider value={operation}>\n      {props.children}\n    </FacadeContext.Provider>\n  );\n};\n\nexport const useFacade = () => {\n  return useContext(FacadeContext);\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport DropDown from \"./Components/DropDowm\";\nimport ProductCard from \"./Components/ProductCard\";\nimport { useFacade } from \"./Facade/facade\";\nimport Loader from \"react-loader-spinner\";\n\nconst App = () => {\n  const [apiData, setApiData]: Array<any> = React.useState([]);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [productData, setProductData] = React.useState([]);\n  const facade = useFacade();\n\n  React.useEffect(() => {\n    setLoading((prevState) => !prevState);\n    facade\n      .getApiData()\n      .then((success: any) => {\n        let response = success.data;\n        response.length = 4;\n        let dropDownData: any = {\n          product: [],\n          state: [],\n          city: [],\n        };\n        Array.from(response, (item: any) => {\n          dropDownData.product.push(item.product_name);\n          dropDownData.state.push(item.address.state);\n          dropDownData.city.push(item.address.city);\n        });\n        setProductData(dropDownData);\n        setApiData(response);\n        setLoading((prevState) => !prevState);\n      })\n      .catch((err: any) => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"App flex h-screen ed-bg\">\n      <div className=\"relative h-full w-1/3\">\n        <div className=\"absolute p-2 top-12 left-24 h-96 rounded-lg bg-black w-64\">\n          <h3 className=\"text-lg text-gray-300 border border-gray-300 border-t-0 border-l-0 border-r-0\">\n            Filters\n          </h3>\n          <div className=\"absolute h-full w-full left-0 \">\n            <DropDown productDetails={productData} />\n          </div>\n        </div>\n      </div>\n      <div className=\"h-full w-4/6 relative flex flex-col gap-8\">\n        <div className=\"w-40 h-40 flex flex-col justify-center items-start mt-8\">\n          <h1 className=\" text-white text-4xl font-bold\">Edvora</h1>\n          <h2 className=\" text-gray-300 text-2xl\">Products</h2>\n        </div>\n        <div className=\"h-full w-full relative\">\n          {loading ? (\n            <div className=\"absolute top-12 left-72\">\n              <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n            </div>\n          ) : (\n            <>\n              <h3 className=\"text-white text-lg border border-gray-300 border-t-0 border-l-0 border-r-0\">\n                Product Name\n              </h3>\n              <div className=\"bg-black flex p-4 space-x-4 rounded-md \">\n                <ProductCard data={apiData} />\n              </div>\n              <h3 className=\"text-white text-lg border border-gray-300 border-t-0 border-l-0 border-r-0\">\n                Product Name\n              </h3>\n              <div className=\"bg-black flex p-4 space-x-4 rounded-md\">\n                <ProductCard data={apiData} />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FacadeProvider } from \"./Facade/facade\";\n\nReactDOM.render(\n    <FacadeProvider>\n      <App />\n    </FacadeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}